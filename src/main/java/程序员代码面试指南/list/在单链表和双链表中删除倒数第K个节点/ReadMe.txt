分别实现两个函数，一个可以删除单链表中倒数第K个节点，另一个可以删除双链表中倒数第K个节点.

要求：
链表长度为N，时间复杂度为O(N)，空间复杂度为O(1).

删除单链表中倒数第 K 个节点：
1、首先遍历整个链表，遍历的过程中不断 K--
2、如果链表长度为4，K为3，那么遍历完 k的值为 -1
   如果减完后，k为0，那么说明准备删除的节点是头节点.
   直接head = head.next;
3、指针回到链表头，再次遍历，条件为 while(++k != 0)
4、如果加完，k==0的话，就说明下一个就是要删除的节点（不信自己试验）
   那么就head.next = head.next.next;
5、如果加完，k != 0的话，指针就继续下移，
   就 head = head.next

删除双链表中倒数第 K 个节点：
1、首先遍历整个链表，遍历的过程不断 K--
2、如果链表的长度为4，K为3，那么遍历完
3、指针回到链表头，再次遍历，条件为 while(++k != 0)
4、如果加完，k==0的话，就说明下一个就是要删除的节点
   那么就取出cur 和 cur.next.next两个节点进行链表的调整
5、cur.next.next 为 cur.next
   cur.next.next.last 为 cur

---------------------------------------------
双链表的另一个思路：
1、遍历链表，指针在末尾
2、然后倒数第 k 个，就遍历k次，不断取出node = node.last
3、修改的时候，
   node.last.next = node.next，
   node.next.last = node.last